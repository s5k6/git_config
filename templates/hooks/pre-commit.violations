#!/bin/bash
set -u -e -C
shopt -s failglob

function err { echo $'\e[1;31m'"$@"$'\e[m' >&2; exit 1; }
function warn { echo $'\e[1;35m'"$@"$'\e[m' >&2; }
function info { echo $'\e[36m'"$@"$'\e[m' >&2; }


# Count of bad files
declare -i bad=0

tests=()
shopt -s nullglob
shopt -u failglob
for t in .git/hooks/violations/*; do
    if ! test -x "${t}" -a -f "${t}"; then continue; fi
    tests+=( "${t}" )
done
shopt -s failglob


# Iterate over all files with git-status.  Need to figure out which
# ones we're really interested in.

while IFS=' ' read -r -d '' ord rest; do

    if test "${ord}" -ne 1; then err "Cannot be: ord=${ord}"; fi  # Note 2

    IFS=' ' read -r xy sub mH mI mW hH hI path <<< "${rest}"

    # Only consider added, modified, renamed, copied files.  This
    # skips: deleted, unmerged files.
    if ! [[ "${xy:0:1}" =~ A|M|R|C ]]; then continue; fi

    # Skip submodules
    if ! [[ "${sub:0:1}" =~ N ]]; then continue; fi

    # Now we have a file to test.  Iterate over tests, pass path as
    # 1st argument, pipe in file contents.  Count violations.

    declare -i violations=0
    for t in "${tests[@]}"; do
        if ! "${t}" "${mH}" "${mI}" "${mW}" "${hH}" "${hI}" "${path}"; then
            warn "${t}:" "${path}"
            violations+=1
        fi
    done

    # If there were violations...
    if test "${violations}" -gt 0; then
        bad+=1
        if test "${xy:1:1}" != .; then # Note 1
            warn "Unstaged changes (${xy:1:1}) on ${path}"
        fi
    fi

done < <(git status --porcelain=2 -uno --no-renames -z) # Note 2


# Abort commit if list of bad files is not empty
if test "${bad}" -gt 0; then
    echo "Pre commit check violated by ${bad} files."
    exit 1
fi


# Note 1: Read git-status(1) for a reference of the meaning of these
# fields.

# Note 2: `--no-renames` lists renames as an add and a remove.  Only
# this allows proper use of -z`; Renames would introduce anoter `\0`,
# making the splitting into lines unreliable.  See case 2,
# documentation of `<sep>` in git-status(1) Section ‘Changed Tracked
# Entries’.
